name: "Create PR"

on: 
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      contents: write
    env:
      OWNER: ${{ github.repository_owner }}
      cache_key: cache-  # ※ 本来このような適当なkeyは使用しない
      cache_dir: ./Main
    steps:
      - name: Generate GitHub App Token
        id: app_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ env.OWNER }} # 操作したいリポジトリのオーナーを指定する
      - name: Create time stamp
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
      - name: Cache restore/save
        id: cache_restore
        uses: actions/cache@v4
        with:
          path: ${{ env.cache_dir }}
          key: ${{ env.cache_key }}${{ env.TIMESTAMP }}
          restore-keys: |
            ${{ env.cache_key }}
      - name: Create txt file
        run: |
          if [ ! -d ./Main ]; then
            mkdir Main
          fi
          ls ./Main
          if [ -e ./Main/cache.txt ]; then
            cat ./Main/cache.txt
          fi
          date > ./Main/cache.txt
      - name: Clone private repository
        env:
          GITHUB_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          # クローンするプライベートリポジトリ名に応じて <REPO_NAME> を書き換える
          ls -R
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git clone https://x-access-token:"$GITHUB_TOKEN"@github.com/chinnosuke/privateTest.git
          ls -R
          cd ./privateTest
          echo -en $(($(cat count.txt)+1)) > count.txt
          git add count.txt
          git commit -m "カウントテスト インクリメント"
          git push
      - name: Cache restore/save
        uses: actions/cache/save@v4
        with:
          path: ${{ env.cache_dir }}
          key: ${{ env.cache_key }}${{ env.TIMESTAMP }}
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            8.0.x
      - run: |
           count=$(($(grep -o "[0-9]\+" <<< $(wc -l data.txt)) + 2))
           while true
           do
               echo count$count
               my_string=$(curl 'https://www.mizuhobank.co.jp/retail/takarakuji/loto/loto7/csv/A1030'$count'.CSV')
               if [[ "$my_string" =~ "html" ]]; then
                   echo "文字列に 'html' が含まれています。"
                   break
               else
                   echo "文字列に 'html' は含まれていません。"
                   numbers=$(sed 's/ /,/g' <<< $(echo $(grep -o "[0-9]\+" <<< $(sed -n '4p' <<< $my_string))))
                   echo -ne "\n$numbers" | sed 's/0\([1-9]\)/\1/g' >> data.txt
               fi
               count=$((count+1))
           done
           dotnet run
           cd ../
           mkdir data
           mv ./privateTest/TextData.csv ./data
           mv ./privateTest/data.txt ./data
           echo "<h1>Hello GitHub Pages!</h1>" > data/index.html 
      - uses: actions/upload-artifact@v4
        with:
          name: my_site
          path: data
      - uses: actions/upload-pages-artifact@v3
        with:
          path: data
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment